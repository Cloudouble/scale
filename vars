accountId="771795544492"
systemProperName="TestLiveElementScale"
lambdaNamespace="testliveelement-scale"
coreBucket="test.scale.live-element.net"
coreRegion="ap-southeast-1"
edgeRegion="us-east-1"
logBucket="log.test.scale.live-element.net"
requestBucket="request.test.scale.live-element.net"
envSystemRoot="_"
envShared="0"
sudoName="system"

# ---GENERATED BUT CUSTOMIZABLE---
envAuthenticationNamespace="$systemProperName"
lambdaRole="$systemProperName"
lambdaRoleArn='arn:aws:iam::'$accountId':role/'$lambdaRole
lambdaPolicyStatement='{"Effect": "Allow","Principal": {"AWS": "'$roleArn'"},"Action": ["s3:DeleteObject","s3:GetObject","s3:PutObject"],"Resource": "arn:aws:s3:::'$coreBucket'/*"}'
lambdaPolicyName="$lambdaRole"

lambdaPolicy='{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "LiveElement0",
            "Effect": "Allow",
            "Action": "lambda:InvokeFunction",
            "Resource": "arn:aws:lambda:*:'$accountId':function:*"
        },
        {
            "Sid": "LiveElement1",
            "Effect": "Allow",
            "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "sts:AssumeRole",
                "logs:CreateLogStream",
                "s3:DeleteObjectVersion",
                "s3:ListBucketVersions",
                "s3:ListBucket",
                "s3:DeleteObject",
                "s3:GetObjectVersion"
            ],
            "Resource": [
                "arn:aws:iam::'$accountId':role/'$lambdaRole'",
                "arn:aws:logs:*:'$accountId':log-group:*",
                "arn:aws:s3:::'$coreBucket'",
                "arn:aws:s3:::*/*"
            ]
        },
        {
            "Sid": "LiveElement2",
            "Effect": "Allow",
            "Action": "logs:PutLogEvents",
            "Resource": "arn:aws:logs:*:'$accountId':log-group:*:log-stream:*"
        },
        {
            "Sid": "LiveElement3",
            "Effect": "Allow",
            "Action": "logs:CreateLogGroup",
            "Resource": "arn:aws:logs:*:'$accountId':log-group:*"
        }
    ]
}'

assumeRolePolicy='{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Service": [
                    "edgelambda.amazonaws.com",
                    "lambda.amazonaws.com"
                ]
            },
            "Action": "sts:AssumeRole"
        }
    ]
}'


lambdaEnvCoreRequest='env = {"bucket": "'$coreBucket'", "lambda_namespace": "'$lambdaNamespace'", "system_root": "'$envSystemRoot'", "shared": '$envShared', "authentication_namespace": "'$envAuthenticationNamespace'"}'
lambdaEnvCoreSchema='env = {"bucket": "'$coreBucket'", "lambda_namespace": "'$lambdaNamespace'", "system_root": "'$envSystemRoot'", "data_root": "'$envSystemRoot'"}'
lambdaEnvTriggerProxy='env = {"bucket": "'$coreBucket'", "lambda_namespace": "'$lambdaNamespace'", "system_root": "'$envSystemRoot'", "shared": '$envShared', "authentication_namespace": "'$envAuthenticationNamespace'"}'
lambdaEnvRegion='env = {"bucket": "'$coreBucket'", "core_request_bucket": "'$requestBucket'"}'

declare -A requestBuckets
requestBuckets["_"]="$coreRegion.$requestBucket"
requestBuckets["ap-southeast-2"]="ap-southeast-2.$requestBucket"

cachePolicyDocumentStandard='{
    "Name": "'$systemProperName'Standard",
    "DefaultTTL": 86400,
    "MaxTTL": 31536000,
    "MinTTL": 1,
    "ParametersInCacheKeyAndForwardedToOrigin": {
        "CookiesConfig": {
            "CookieBehavior": "all"
        },
        "QueryStringsConfig": {
            "QueryStringBehavior": "all"
        },
        "EnableAcceptEncodingGzip": true,
        "EnableAcceptEncodingBrotli": true,
        "HeadersConfig": {
            "HeaderBehavior": "whitelist",
            "Headers": {
                "Quantity": 5,
                "Items":["Accept","Access-Control-Request-Method","Access-Control-Request-Headers","Authorization","'$envAuthenticationNamespace'Connection"]
            }
        }
    }
}'

cachePolicyDocumentDisabled='{
    "Name": "'$systemProperName'Disabled",
    "DefaultTTL": 0,
    "MaxTTL": 0,
    "MinTTL": 0,
    "ParametersInCacheKeyAndForwardedToOrigin": {
        "CookiesConfig": {
            "CookieBehavior": "none"
        },
        "QueryStringsConfig": {
            "QueryStringBehavior": "none"
        },
        "EnableAcceptEncodingGzip": false,
        "EnableAcceptEncodingBrotli": false,
        "HeadersConfig": {
            "HeaderBehavior": "none"
        }
    }
}'


declare -A readBehavior
readBehavior["TargetOriginId"]=$coreBucket
readBehavior["AllowedMethods"]='{"Quantity": 3, "Items": ["GET", "HEAD", "OPTIONS"]}'
readBehavior["CachePolicyId"]=$dCachePolicyIdDisabled
readBehavior["OriginRequestPolicyId"]=$dOriginRequestPolicyIdStandard
readBehavior["LambdaFunctionAssociations"]='{}'

declare -A writeBehavior
writeBehavior["TargetOriginId"]=$coreBucket
writeBehavior["AllowedMethods"]='{"Quantity": 7, "Items": ["GET" "HEAD" "OPTIONS" "PUT" "POST" "PATCH" "DELETE"]}'
writeBehavior["CachePolicyId"]=$dCachePolicyIdDisabled
writeBehavior["OriginRequestPolicyId"]=$dOriginRequestPolicyIdStandard
writeBehavior["LambdaFunctionAssociations"]=$dLambdaFunctionAssociations

declare -A blockedBehaviour
blockedBehaviour["TargetOriginId"]=$coreBucket'-403'
blockedBehaviour["AllowedMethods"]='{"Quantity": 7, "Items": ["GET" "HEAD" "OPTIONS" "PUT" "POST" "PATCH" "DELETE"]}'
blockedBehaviour["CachePolicyId"]=$dCachePolicyIdStandard
blockedBehaviour["OriginRequestPolicyId"]=$dOriginRequestPolicyIdStandard
blockedBehaviour["LambdaFunctionAssociations"]='{}'

declare -A cacheBehaviors
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/subscription/*/????????-????-????-????-????????????/*.*"]=$readBehavior #0
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/subscription/*/????????-????-????-????-????????????.*"]=$readBehavior #1
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/feed/*/????????-????-????-????-????????????/*/*/*/*-*.*"]=$readBehavior #2
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/record/*/????????-????-????-????-????????????/*.json"]=$writeBehavior #3
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/record/*/????????-????-????-????-????????????.json"]=$writeBehavior #4
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/subscription/*/????????-????-????-????-????????????/????????-????-????-????-????????????.json"]=$writeBehavior #5
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/feed/*/????????-????-????-????-????????????/????????-????-????-????-????????????.json"]=$writeBehavior #6
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/query/*/????????-????-????-????-????????????.json"]=$writeBehavior #7
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/asset/*"]=$writeBehavior #8
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/static/*"]=$writeBehavior #9
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/view/????????-????-????-????-????????????.json"]=$writeBehavior #10
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/connect.json"]=$writeBehavior #11
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/system/*/*.json"]=$writeBehavior #12
cacheBehaviors["$envSystemRoot/connection/????????-????-????-????-????????????/error/*.html"]=$writeBehavior #13
cacheBehaviors["$envSystemRoot/*"]=$blockedBehavior #14
